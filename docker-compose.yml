version: '3.8'
services:
  acme.sh:
    image: neilpang/acme.sh:latest
    container_name: acme.sh
    command: daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - acmesh-certs:/acme.sh
    environment:
      - CF_Account_ID=${CF_Account_ID}
      - CF_Token=${CF_Token}
    restart: always

  nginx:
    image: nginx:1.19.2
    container_name: nginx
    environment:
      - X_HA_ACCESS=${X_HA_ACCESS}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites-enabled:/etc/nginx/sites-enabled
      - acmesh-certs:/etc/nginx/ssl:rw
      - ./docker/nginx/ssl/dhparam.pem:/etc/nginx/ssl/dhparam.pem:rw
      - ./docker/nginx/html:/var/www/html
    restart: always

  homeassistant:
    image: homeassistant/home-assistant:0.114.4
    container_name: homeassistant
    volumes:
      - ./docker/homeassistant/configuration:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    network_mode: host
    ports:
      - 8123:8123

  mosquitto:
    build:
      context: ./docker/mosquitto
      args:
        - USERNAME=${MQTT_USER}
        - PASSWORD=${MQTT_PASSWORD}
    container_name: mosquitto
    ports:
      - 1883:1883
      - 8883:8883
    restart: always
    volumes:
      - ./docker/mosquitto/configuration/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - acmesh-certs:/etc/acme.sh/ssl:ro

  influxdb:
    image: influxdb:1.8.1
    container_name: influxdb
    volumes:
      - influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_GRAPHITE_ENABLED=false
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_READ_USER=${INFLUXDB_READ_USER}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD}
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
    ports:
      - 8086:8086
    restart: always

  grafana:
    image: grafana/grafana:7.1.4
    container_name: grafana
    volumes:
      - grafana:/data
      - ./docker/grafana/configuration:/etc/grafana
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_DOMAIN=grafana.dashford.io
      - GF_SERVER_ROOT_URL=https://grafana.dashford.io
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD}
    restart: always

  telegraf:
    image: telegraf:1.15.2
    container_name: telegraf
    volumes:
      - ./docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - MQTT_USERNAME=${MQTT_USER}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_MQTT_HOST=${INFLUXDB_MQTT_HOST}
    restart: always

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:1.16.1
    container_name: zigbee2mqtt
    volumes:
      - zigbee2mqtt:/app/data
      - ./docker/zigbee2mqtt/configuration.yaml:/app/configuration.yaml:rw
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyACM0
    restart: always
    network_mode: host
    environment:
      - TZ=Europe/Dublin
      - ZIGBEE2MQTT_DATA=/app
      - ZIGBEE2MQTT_CONFIG_MQTT_USER=${MQTT_USER}
      - ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD=${MQTT_PASSWORD}

volumes:
  influxdb:
    driver: local
  grafana:
    driver: local
  acmesh-certs:
    driver: local
  zigbee2mqtt:
    driver: local
