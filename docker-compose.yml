version: '3.8'
services:
  traefik:
    image: traefik:2.4.8
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=false"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.leresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.leresolver.acme.email=david@dashford.io"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
      # Below just for lets encrypt staging, remove when it's all verified
      #- "--certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - 443:443
    network_mode: host
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - traefik:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  homeassistant:
    image: homeassistant/home-assistant:2021.3.4
    container_name: homeassistant
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.homeassistant.rule=Host(`home.dashford.io`)"
      - "traefik.http.routers.homeassistant.entrypoints=websecure"
      - "traefik.http.routers.homeassistant.tls=true"
      - "traefik.http.routers.homeassistant.tls.certresolver=leresolver"
      - "traefik.http.services.homeassitant.loadbalancer.server.port=8123"
    network_mode: host
    volumes:
      - ./docker/homeassistant/configuration:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    ports:
      - 8123:8123

  mosquitto:
    build:
      context: ./docker/mosquitto
      args:
        - USERNAME=${MQTT_USER}
        - PASSWORD=${MQTT_PASSWORD}
    container_name: mosquitto
    ports:
      - 1883:1883
      - 8883:8883
    restart: always
    volumes:
      - ./docker/mosquitto/configuration/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - acmesh-certs:/etc/acme.sh/ssl:ro

  influxdbha:
    image: library/influxdb:1.8.1
    container_name: influxdbha
    volumes:
      - influxdbha:/var/lib/influxdb
    environment:
      - INFLUXDB_GRAPHITE_ENABLED=false
      - INFLUXDB_DB=${INFLUXDBHA_DB}
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_ADMIN_USER=${INFLUXDBHA_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDBHA_ADMIN_PASSWORD}
      - INFLUXDB_READ_USER=${INFLUXDBHA_READ_USER}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDBHA_READ_USER_PASSWORD}
      - INFLUXDB_WRITE_USER=${INFLUXDBHA_WRITE_USER}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDBHA_WRITE_USER_PASSWORD}
    ports:
      - 8096:8086
    restart: always

  grafana:
    image: grafana/grafana:7.5.1
    container_name: grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.dashford.io`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=leresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      - grafana:/data
      - ./docker/grafana/configuration:/etc/grafana
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    network_mode: host
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_DOMAIN=grafana.dashford.io
      - GF_SERVER_ROOT_URL=https://grafana.dashford.io
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD}
      - INFLUXDBHA_HOST=${INFLUXDBHA_HOST}
      - INFLUXDBHA_READ_USER_PASSWORD=${INFLUXDBHA_READ_USER_PASSWORD}
    restart: always

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:1.18.1
    container_name: zigbee2mqtt
    volumes:
      - zigbee2mqtt:/app/data
      - ./docker/zigbee2mqtt/configuration.yaml:/app/data/configuration.yaml:rw
      - ./docker/zigbee2mqtt/secret.yaml:/app/data/secret.yaml:ro
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyACM0
    restart: always
    network_mode: host
    environment:
      - TZ=Europe/Dublin
      - ZIGBEE2MQTT_DATA=/app/data
      - ZIGBEE2MQTT_CONFIG_MQTT_USER=${MQTT_USER}
      - ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD=${MQTT_PASSWORD}

volumes:
  influxdbha:
    driver: local
  grafana:
    driver: local
  acmesh-certs:
    driver: local
  zigbee2mqtt:
    driver: local
  traefik:
    driver: local
